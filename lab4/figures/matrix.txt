	 Slope	Aspect	Crime	Roads	Buildings	
Slope	1	  2       4       2         2		
Aspect	1	  1       4       1         2
Crime	1/4	  1/4	  1       1/2       1/2
Roads	1/2	  1		  2 	  1	        1 
Buildi  1/2	  1/2     2 	  1		    1




> x= c(1,2,4,2,2,1,1,4,1,2,1/4,1/4,1,1/2,1/2,1/2,1,2,1,1,1/2,1/2,2,1,1)
> #turning your vector back into a 4X4 matrix
> xm = matrix(x,nr=5,nc=5,byrow=TRUE)
> 
> #viewing you matrix
> xm
     [,1] [,2] [,3] [,4] [,5]
[1,] 1.00 2.00    4  2.0  2.0
[2,] 1.00 1.00    4  1.0  2.0
[3,] 0.25 0.25    1  0.5  0.5
[4,] 0.50 1.00    2  1.0  1.0
[5,] 0.50 0.50    2  1.0  1.0
> 
> #Calculating AHP weights
> eigen.xm = eigen(xm)
> 
> #The AHP weights
> prop.table(as.numeric(eigen.xm$vectors[,1]))
[1] 0.3447992 0.2617534 0.0736826 0.1723996 0.1473652
> 
> #number of criteria
> nn = 5
> 
> #Calculating the consistency of your weighted evaluation
> rand.ci = 0.89
> lambda.max = eigen.xm$values[1]
> consist.index = (lambda.max-nn)/(nn - 1)
> consist.ratio = consist.index/rand.ci
> 
> # The value must be less than .10
> consist.ratio
[1] 0.06400882+0i
> 